name: Deploy FastAPI EC2 with HTTPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if SSH key exists
        run: |
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "SSH Key is missing!" && exit 1
          fi

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p 22 -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no -T ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}

      - name: Sync files to EC2
        run: |
          rsync -avz --exclude '.git/' ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app
        env:
            SSH_AUTH_SOCK: /tmp/ssh-agent.sock
            
      - name: Deploy on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'

            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export ALGORITHM=${{ secrets.ALGORITHM }}
            export ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

            cd /home/${{ secrets.EC2_USER }}/app
            # Virtualenv
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Systemd service for Uvicorn
            sudo tee /etc/systemd/system/fastapi.service > /dev/null << EOL
            [Unit]
            Description=FastAPI application
            After=network.target

            [Service]
            User=${{ secrets.EC2_USER }}
            WorkingDirectory=/home/${{ secrets.EC2_USER }}/app
            ExecStart=/home/${{ secrets.EC2_USER }}/app/venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOL

            sudo systemctl daemon-reload
            sudo systemctl enable fastapi.service
            sudo systemctl restart fastapi.service

            # Nginx config for HTTP & HTTPS
            sudo tee /etc/nginx/sites-available/default > /dev/null << 'EOL'
            server {
                listen 80;
                server_name {{secrets.DOMAIN_NAME}};

                location / {
                    proxy_pass http://127.0.0.1:8000;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
            EOL

            sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx

            # Install certbot for HTTPS
            sudo apt-get update
            sudo apt-get install -y certbot python3-certbot-nginx
            sudo certbot --nginx -d {{secrets.DOMAIN_NAME}} --non-interactive --agree-tos -m {{secrets.ADMIN_EMAIL}}

          EOF
